import asyncio
from aiogram import Bot, Router, F
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

import db
from config import PRIVATE_GROUP_CHAT_ID, ADMIN_ID

router = Router()


async def check_subscriptions(bot: Bot):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏—Å—Ç—ë–∫—à–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –∏ –∫–∏–∫–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    try:
        expired_users = db.get_expired_subscriptions()  # —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç list of tuples

        for user in expired_users:
            tg_id = user[0]
            username = user[1]

            # –î–ª—è —Ç–µ—Å—Ç–∞: –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–∏–∫ –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–∞–º–æ–º—É —Å–µ–±–µ
            is_self = tg_id == ADMIN_ID

            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –≤ –≥—Ä—É–ø–ø–µ —Å—Ä–∞–∑—É, —á—Ç–æ–±—ã –Ω–µ –ø–æ–≤—Ç–æ—Ä—è—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            db.set_user_in_group(tg_id, False)

            if not is_self:
                try:
                    # –ü—ã—Ç–∞–µ–º—Å—è –∫–∏–∫–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ —Å–µ–±—è)
                    await bot.ban_chat_member(PRIVATE_GROUP_CHAT_ID, tg_id)
                    await bot.unban_chat_member(PRIVATE_GROUP_CHAT_ID, tg_id)
                except Exception as e:
                    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –Ω–µ –≤ –≥—Ä—É–ø–ø–µ –∏–ª–∏ —á–∞—Ç –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç ‚Äî –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–∏–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {username}: {e}")

            # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–± —É–¥–∞–ª–µ–Ω–∏–∏ —Å –∫–Ω–æ–ø–∫–æ–π –ø—Ä–æ–¥–ª–µ–Ω–∏—è
            try:
                # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –ø—Ä–æ–¥–ª–µ–Ω–∏—è
                renew_keyboard = InlineKeyboardMarkup(
                    inline_keyboard=[
                        [InlineKeyboardButton(text="üí≥ –ü—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="buy_subscription")]
                    ]
                )

                await bot.send_message(
                    tg_id,
                    "‚ùå –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞!\n\n"
                    "–í—ã –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã –∏–∑ –∑–∞–∫—Ä—ã—Ç–æ–π –≥—Ä—É–ø–ø—ã. "
                    "–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É.\n\n"
                    "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å —Ç–∞—Ä–∏—Ñ –∏ –æ–ø–ª–∞—Ç–∏—Ç—å:",
                    reply_markup=renew_keyboard
                )
                print(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {username} (ID: {tg_id})")

            except Exception as e:
                # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
                print(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {username}: {e}")

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
            if ADMIN_ID:
                await bot.send_message(
                    ADMIN_ID,
                    f"üëã –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} (ID: {tg_id}) –±—ã–ª —É–¥–∞–ª—ë–Ω –∏–∑ –∑–∞–∫—Ä—ã—Ç–æ–π –≥—Ä—É–ø–ø—ã –ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏."
                )
            print(f"–£–¥–∞–ª—ë–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} (ID: {tg_id}) –∏–∑ –∑–∞–∫—Ä—ã—Ç–æ–π –≥—Ä—É–ø–ø—ã")

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ —à–µ–¥—É–ª–µ—Ä–µ: {e}")
        if ADMIN_ID:
            await bot.send_message(ADMIN_ID, f"‚ùå –û—à–∏–±–∫–∞ –≤ —à–µ–¥—É–ª–µ—Ä–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–æ–∫: {e}")


async def start_scheduler(bot: Bot):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ–¥–ø–∏—Å–æ–∫"""
    while True:
        await check_subscriptions(bot)
        await asyncio.sleep(10)  # –¥–ª—è —Ç–µ—Å—Ç–∞, –≤ –±–æ—é 6*3600
