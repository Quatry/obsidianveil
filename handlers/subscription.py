from aiogram import Router, F, Bot
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton

from handlers.shared import offer_text
from keyboards import main_menu, offer_menu, subscription_menu

router = Router()


@router.callback_query(F.data == "buy_subscription")
async def offer_handler(callback: CallbackQuery):
    if callback.message and callback.message.text:
        await callback.message.edit_text(text=offer_text, reply_markup=offer_menu)
    else:
        await callback.message.answer(text=offer_text, reply_markup=offer_menu)
    await callback.answer()


@router.callback_query(F.data == "accept_offer")
async def subscription_handler(callback: CallbackQuery):
    if callback.message and callback.message.text:
        await callback.message.edit_text(text="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ –ø–æ–¥–ø–∏—Å–∫–∏:", reply_markup=subscription_menu)
    else:
        await callback.message.answer(text="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ –ø–æ–¥–ø–∏—Å–∫–∏:", reply_markup=subscription_menu)
    await callback.answer()


@router.callback_query(F.data == "back_offer")
async def back_offer_handler(callback: CallbackQuery):
    if callback.message and callback.message.text:
        await callback.message.edit_text(text=offer_text, reply_markup=offer_menu)
    else:
        await callback.message.answer(text=offer_text, reply_markup=offer_menu)
    await callback.answer()


@router.callback_query(F.data == "back_main")
async def back_main_handler(callback: CallbackQuery):
    if callback.message and callback.message.text:
        await callback.message.edit_text(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu)
    else:
        await callback.message.answer(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu)
    await callback.answer()


@router.callback_query(F.data.in_({"buy_month", "buy_year"}))
async def buy_plan_handler(callback: CallbackQuery):
    plans = {
        'buy_month': '1 –º–µ—Å—è—Ü - 300—Ä—É–±',
        'buy_year': '1 –≥–æ–¥ - 3000—Ä—É–±'
    }
    plan = plans.get(callback.data)
    text = (
        f"–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ç–∞—Ä–∏—Ñ: <b>{plan}</b>\n\n"
        f"üí≥ –†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã:\n"
        f"üîπ –°–±–µ—Ä–±–∞–Ω–∫: 1234 5678 9876 5432\n"
        f"üîπ –¢–∏–Ω—å–∫–æ—Ñ—Ñ: 5555 6666 7777 8888\n\n"
        f"–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —á–µ–∫ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ."
    )
    await callback.message.answer(
        text,
        reply_markup=InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="üìé –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —á–µ–∫", callback_data="attach_receipt")],
                [InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="back_offer")]
            ]
        )
    )
    await callback.answer("–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –æ–ø–ª–∞—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.")
